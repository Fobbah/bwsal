#sidebar TableOfContents

Class header file: http://code.google.com/p/bwsal/source/browse/trunk/BWSAL/include/Controller.h

Each component of BWSAL that actually owns and controls units must inherit from Controller and work with the [Arbitrator].

  * [#onOffer onOffer]
  * [#onRevoke onRevoke]
  * [#getName getName]
  * [#getShortName getShortName]
  * [#update update]

== onOffer ==
virtual void onOffer(std::set<{{{_}}}Tp> objects)=0;

A callback the [Arbitrator] uses when it wants to offer units to the controller. For each unit in the set, the [Controller] should either [Arbitrator#accept accept] or [Arbitrator#decline decline] each individual unit.

== onRevoke ==
virtual void onRevoke({{{_}}}Tp, {{{_}}}Val bid)=0;

A callback the [Arbitrator] uses when has to take a unit away from the [Controller], such as the case when another [Controller] has outbid this [Controller].

== getName ==
virtual std::string getName() const=0;

Should return the name of the [Controller].

== getShortName ==
virtual std::string getShortName() const;

Should return a short name of the [Controller].

== update ==
virtual void update()=0;

Called during AIModule::onFrame.