#summary Ideas for new BWSAL functionality

Ideas for new BWSAL functionality, in no particular order

== Rewrite the build order manager so it uses a better algorithm ==

For example, building 60 SCVs with priority 100 and a barracks with priority 99 shouldn't wait until you have all 60 SCVs completed before constructing the barracks. Build the barracks as soon as possible without delaying/interrupting SCV production.

Build Order Manager should assume constant rate of mineral gathering, and should recalculate build order as needed. For example, assuming a constant rate of mineral increase, here is a build order plan for 20 SCVs at priority 100, 25 Marines at priority 90, and 2 Barracks at priority 80:

http://i.imgur.com/n4aYX.png

The algorithm probably doesn't need to calculate the entire plan, just the next minute or so. Also calculating the whole plan is probably not worthwhile since new build orders may come it at any time from the player, and the actual rate of mineral gathering isn't constant.

Within a priority level, order by: Tech, Upgrades, Building construction, Unit production. (morphs could be filed under building construction or unit production based on what kind of morph it is).


== Information Manager ==

Not a controller.

For imperfect information AI, use logic to infer things. For example, if you see a Corsair, you know a Stargate was created at some point, and you can determine an upper bound on when it was created. Similarly you can infer a Cybernetics core was created with a different upper bound on its creation, etc. If you see a psionic storm you can infer the enemy has researched that tech and has a high templar.

Also we can provide a reasonable guess as to the existence of units - for example you saw a unit, and never saw it die via onUnitDestroy, then it probably still exists. Or if you saw a building at a particular spot, and you can see those build tiles and the building is not there, then it was probably destroyed at some point (unless it was a Terran building that can lift, in which case it may have just moved to a different spot).

Also keeps track of last seen positions and the time the unit was last seen. Maybe do some stuff to calculate probability unit is at tile X,Y, assuming the unit began a random walk when it went out of sight. Though this might be too calculation intensive to do in real time for every movable unit.

== Other Ideas ==

  * Make the build order manager take into account dependencies (so building a factory with no barracks planned will build a barracks first)
  * Attack Manager - attack stuff, maybe break down into smaller managers
  * Contain Manager - contains the enemy with siege tanks, lurkers, etc.
  * Front Manager - Not a controller, tries to calculate where our front ends and where the enemy's front begins.
  * Repair Manager - repair units that are damaged
  * Threat Assessment Manager - influence maps. Determine which tiles are dangerous and how much. Also assign a priority to units that are attacking our base.
  * Risk Adverse Path Manager - moves units to their destination using the safest path (recalculate paths when new threats are discovered i.e. Missile Turrets)
  * Transport Manager - transports units to a given position, perhaps with a priority, using the risk adverse path planner to find safest paths

  * Improve the scout manager so that it tries to stay alive as long as possible inside the enemy base once it finds the enemy base

  * Add a function to the building placer which takes a choke point and list of building unit types (possibly with repetitions) and returns a list of unit type - build position pairs that can be used to block off the choke point.